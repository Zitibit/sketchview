import { create } from "zustand";
import { StoreState } from "./interface"; // Importing the interface

const useStore = create<StoreState>((set) => ({
    elements: [],
    setElements: (elements) => set({ elements }),
    currentTool: "freedraw",
    setCurrentTool: (tool) => set({ currentTool: tool }),
    selectedElements: [],
    setSelectedElements: (elements) => set({ selectedElements: elements }),
    color: "#000000",
    setColor: (color) => set({ color }),
    fillColor: "transparent",
    setFillColor: (fillColor) => set({ fillColor }),
    strokeWidth: 5,
    setStrokeWidth: (strokeWidth) => set({ strokeWidth }),
    opacity: 100,
    setOpacity: (opacity) => set({ opacity }),
    zoom: 1,
    setZoom: (zoom) => set({ zoom }),
    offset: { x: 0, y: 0 },
    setOffset: (offset) => set({ offset }),
    history: [[]],
    setHistory: (history) => set({ history }),
    historyIndex: 0,
    setHistoryIndex: (historyIndex) => set({ historyIndex }),
    showGrid: true,
    setShowGrid: (showGrid) => set({ showGrid }),
    showPreview: true,
    setShowPreview: (showPreview) => set({ showPreview }),
    copiedElements: [],
    setCopiedElements: (copiedElements) => set({ copiedElements }),
    canvasSize: { width: 2000, height: 2000 },
    setCanvasSize: (canvasSize) => set({ canvasSize }),
    canvasBounds: { minX: -2000, minY: -2000, maxX: 2000, maxY: 2000 },
    setCanvasBounds: (canvasBounds) => set({ canvasBounds }),

    // New state properties
    dimensions: { width: 0, height: 0 },
    setDimensions: (dimensions) => set({ dimensions }),
    isDrawing: false,
    setIsDrawing: (isDrawing) => set({ isDrawing }),
    currentElement: null,
    setCurrentElement: (element) => set({ currentElement: element }),
    isPanning: false,
    setIsPanning: (isPanning) => set({ isPanning }),
    panStart: { x: 0, y: 0 },
    setPanStart: (panStart) => set({ panStart }),
    isResizing: false,
    setIsResizing: (isResizing) => set({ isResizing }),
    resizeStart: { x: 0, y: 0 },
    setResizeStart: (resizeStart) => set({ resizeStart }),
    resizeElement: null,
    setResizeElement: (resizeElement) => set({ resizeElement }),
    resizePosition: "",
    setResizePosition: (resizePosition) => set({ resizePosition }),
    connectionCount: 0,
    setConnectionCount: (connectionCount) => set({ connectionCount }),
    leftSidebarOpen: true,
    setLeftSidebarOpen: (leftSidebarOpen) => set({ leftSidebarOpen }),
    roughness: 1,
    setRoughness: (roughness) => set({ roughness }),
    freehandSettings: {
        thinning: 0.5,
        smoothing: 0.5,
        streamline: 0.5,
        taperStart: 0,
        taperEnd: 0,
    },
    setFreehandSettings: (freehandSettings) => set({ freehandSettings }),
    gridSize: 35,
    setGridSize: (gridSize) => set({ gridSize }),
    gridContrast: 1.5,
    setGridContrast: (gridContrast) => set({ gridContrast }),
    virtualCanvasSize: { width: 4000, height: 4000 },
    setVirtualCanvasSize: (virtualCanvasSize) => set({ virtualCanvasSize }),

    peerId: "",
    setPeerId: (peerId) => set({ peerId }),
    remotePeerId: "",
    setRemotePeerId: (remotePeerId) => set({ remotePeerId }),
    collaborationEnabled: false,
    setCollaborationEnabled: (collaborationEnabled) => set({ collaborationEnabled }),
}));

export default useStore;
